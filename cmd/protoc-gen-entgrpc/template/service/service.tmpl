{{- /*gotype: icode.baidu.com/baidu/left/sslop-backend/tools/protoc-gen-entgrpc.serviceGenerator*/ -}}
{{ define "service" }}
// Code generated by protoc-gen-entgrpc. DO NOT EDIT.
package {{ .File.GoPackageName }}

{{- if gt (len .Service.Methods) 0 }}

    {{ $connectPkg := print (unquote .File.GoImportPath.String) "/" (removeSuffix (print .File.GoPackageName) "service") "connect" }}
    {{ $connectHandler := print .Service.GoName "Handler" }}

    // {{ .Service.GoName }} implements $connectHandler
    type {{ .Service.GoName }} struct {
        *{{ .RuntimePackage.Ident "BaseService" | ident }}
        *{{ .EntPackage.Ident "Client" | ident }}
    }

    var _ {{ qualify $connectPkg $connectHandler }} = (*{{ .Service.GoName }})(nil)

    // New{{ .Service.GoName }} returns a new {{ .Service.GoName }}
    func New{{ .Service.GoName }}(client *{{ .EntPackage.Ident "Client" | ident }}) *{{ .Service.GoName }} {
        return &{{ .Service.GoName }}{
            BaseService: {{ .RuntimePackage.Ident "NewBaseService" | ident }}(),
            Client:      client,
        }
    }

    {{ range .Service.Methods }}
        {{- $idField := $.FieldMap.ID -}}
        {{- $varName := $idField.EntField.Name -}}
        {{- $methodName := .GoName -}}
        {{- $inputName := .Input.GoIdent.GoName -}}

        // {{ .GoName }} implements {{ $.Service.GoName }}Server.{{ .GoName }}
        func (svc *{{ $.Service.GoName }}) {{ .GoName }}(ctx {{ qualify "context" "Context" }}, req *{{ $.ConnectPackage.Ident "Request" | ident }}[{{ ident .Input.GoIdent }}]) (*{{ $.ConnectPackage.Ident "Response" | ident }}[{{ ident .Output.GoIdent }}], error) {
            {{- if eq $methodName "Get" }}
                {{ template "method_get" (method .) }}
            {{- else if eq $methodName "Delete" }}
                {{ template "method_delete" (method .) }}
            {{- else if or (eq $methodName "Create") (eq $methodName "Update") }}
                {{ template "method_mutate" (method .) }}
            {{- else if eq $methodName "List" }}
                {{ template "method_list" (method .) }}
            {{- end }}
        }

        {{ if (eq $methodName "List") }}
            // List implements {{ $.Service.GoName }}Server.List
            func (svc *{{ $.Service.GoName }}) BuildListQuery(req *{{ $.ConnectPackage.Ident "Request" | ident }}[{{ ident .Input.GoIdent }}]) (*{{ $.EntPackage.Ident (print $.EntType.Name "Query") | ident }}, *{{ $.EntPackage.Ident (print $.EntType.Name "Query") | ident }}, error) {
                {{ template "build_list_query" (method .) }}
            }
        {{ end }}
    {{ end }}

    {{- $createdBuilder := false }}
    {{ range .Service.Methods }}
        {{- $methodName := .GoName }}

        {{- if or (eq $methodName "Create") (eq $methodName "BatchCreate") }}
            {{ if not $createdBuilder }}
                {{- template "create_builder_func" dict "ServiceName" ($.Service.GoName) "Method" (method .) }}
                {{ $createdBuilder = true }}
            {{ end }}
        {{- end }}
    {{ end }}
    
{{ end }}
{{ end }}
